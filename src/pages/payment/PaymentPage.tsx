// src/pages/payment/PaymentPage.tsx
import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Button, Card, Typography, Alert, Space, Divider, message, Spin } from 'antd';
import { usePaymentService } from '../../services/payment/payMentService';
import { Link } from 'react-router-dom';
import styles from './PaymentPage.module.scss';
import { useAuth } from '../../services/authService';
import { useEffect } from 'react';

const { Title, Paragraph, Text } = Typography;

const PaymentPage: React.FC = () => {
  const navigate = useNavigate();
  const { createPayment } = usePaymentService();
  const [isProcessing, setIsProcessing] = useState(false);
  const [paymentUrl, setPaymentUrl] = useState<string>('');
  const [isCheckingAccess, setIsCheckingAccess] = useState(true);
  const { fetchUserInfo, userInfo } = useAuth();

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ userInfo
  useEffect(() => {
    const checkAccess = async () => {
      try {
        setIsCheckingAccess(true);

        // –ï—Å–ª–∏ userInfo —É–∂–µ –µ—Å—Ç—å, –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ
        if (userInfo) {
          if (userInfo.has_access) {
            message.info('–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é...');
            setTimeout(() => navigate('/home'), 2000);
            return;
          } else {
            // –ï—Å–ª–∏ userInfo –µ—Å—Ç—å, –Ω–æ –¥–æ—Å—Ç—É–ø–∞ –Ω–µ—Ç, –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
            setIsCheckingAccess(false);
            return;
          }
        }

        // –ï—Å–ª–∏ userInfo –Ω–µ—Ç, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –µ–≥–æ
        const userData = await fetchUserInfo();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–æ—Å—Ç—É–ø —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (userData?.has_access) {
          message.info('–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é...');
          setTimeout(() => navigate('/home'), 2000);
          return;
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç—É–ø–∞:', error);
        // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞, –æ—Å—Ç–∞–µ–º—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ–ø–ª–∞—Ç—ã
      } finally {
        setIsCheckingAccess(false);
      }
    };

    checkAccess();
  }, [fetchUserInfo, navigate, userInfo]);

  const handleSubscribe = async () => {
    setIsProcessing(true);
    try {
      const paymentResponse = await createPayment();

      if (paymentResponse && paymentResponse.confirmation_url) {
        setPaymentUrl(paymentResponse.confirmation_url);
      }
      // –û—à–∏–±–∫–∞ 403 –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ —Å–µ—Ä–≤–∏—Å–µ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ + —Ä–µ–¥–∏—Ä–µ–∫—Ç
    } catch (err: unknown) {
      // –û–±—â–∏–µ –æ—à–∏–±–∫–∏ (–∫—Ä–æ–º–µ 403, –∫–æ—Ç–æ—Ä–∞—è —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –≤ —Å–µ—Ä–≤–∏—Å–µ)
      const errorMessage = err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞';
      if (!errorMessage.includes('–î–æ—Å—Ç—É–ø —É–∂–µ –æ–ø–ª–∞—á–µ–Ω')) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞ "—É–∂–µ –æ–ø–ª–∞—á–µ–Ω–æ"
        message.error(errorMessage);
      }
    } finally {
      setIsProcessing(false);
    }
  };

  const handleOpenPayment = () => {
    if (paymentUrl) {
      // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫—Ä—ã—Ç—å –≤ —Ç–µ–∫—É—â–µ–º –æ–∫–Ω–µ (—Ä–∞–±–æ—Ç–∞–µ—Ç –≤ Safari)
      window.location.href = paymentUrl;
    }
  };

  // –ï—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏–Ω–Ω–µ—Ä
  if (isCheckingAccess) {
    return (
      <div className={styles.loadingContainer}>
        <Spin size="large" tip="–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞..." />
      </div>
    );
  }

  return (
    <div className={styles.paymentPage}>
      <div className={styles.container}>
        <Card className={styles.paymentCard}>
          <Space direction="vertical" size="large" className={styles.content}>
            <div className={styles.header}>
              <Title level={2}>‚ùå –£ –≤–∞—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Å–µ—Ä–≤–∏—Å</Title>
            </div>

            <Alert
              message="–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–∞"
              description="–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É."
              type="warning"
              showIcon
            />

            <div className={styles.infoSection}>
              <Paragraph>
                <Text strong>–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏:</Text> 50 —Ä—É–±–ª–µ–π –≤ –º–µ—Å—è—Ü
              </Paragraph>

              {!paymentUrl ? (
                <>
                  <Button
                    type="primary"
                    size="large"
                    onClick={handleSubscribe}
                    className={styles.subscribeButton}
                    block
                    loading={isProcessing}
                    disabled={isProcessing}
                  >
                    –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã
                  </Button>
                </>
              ) : (
                <>
                  <Paragraph>
                    <Text strong>–°—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã –≥–æ—Ç–æ–≤–∞:</Text>
                  </Paragraph>

                  <Space direction="vertical" style={{ width: '100%' }} size="middle">
                    <Button
                      type="primary"
                      size="large"
                      onClick={handleOpenPayment}
                      className={styles.paymentLinkButton}
                      block
                    >
                      üí≥ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ
                    </Button>

                  </Space>
                </>
              )}

              <Divider />
              <Link className={styles.refreshButton} to="/">–ù–∞ –≥–ª–∞–≤–Ω—É—é</Link>


              <Paragraph className={styles.thankYou}>
                –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è! –°–ø–∞—Å–∏–±–æ —á—Ç–æ –æ—Å—Ç–∞–µ—Ç–µ—Å—å —Å –Ω–∞–º–∏!
              </Paragraph>

              <Paragraph className={styles.support}>
                –í–æ–∑–Ω–∏–∫ –≤–æ–ø—Ä–æ—Å? –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –Ω–∞ –ø–æ—á—Ç—É {' '}
                <a href="mailto:pravsklad@mail.ru" className={styles.supportLink}>
                  pravsklad@mail.ru
                </a>
              </Paragraph>
            </div>
          </Space>
        </Card>
      </div>
    </div>
  );
};

export default PaymentPage;